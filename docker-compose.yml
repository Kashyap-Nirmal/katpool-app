# version 0.4
services:
  postgres:
    image: postgres
    container_name: katpool-db
    networks:
      - backend
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - .env
    restart: always

  # Redis service
  redis:
    image: redis:latest
    container_name: redis
    # ports:
    #   - "6379:6379"  # Expose Redis port for external access (optional)
    networks:
      - backend

  # kaspad-mainnet:
  #   container_name: kaspad-mainnet
  #   image: supertypo/rusty-kaspad:v0.15.2
  #   restart: unless-stopped
  #   ports:
  #     - "16111:16111/tcp"
  #     - "16110:16110/tcp" # gRPC
  #     - "17110:17110/tcp" # wRPC (borsh)
  #     - "18110:18110/tcp" # wRPC (json)
  #   volumes:
  #     - /root/kaspad_mainnet:/app/data/
  #   networks:
  #     - backend

  kaspad-testnet10: # REGULAR TESTNET
    container_name: kaspad-testnet10
    image: supertypo/rusty-kaspad:v0.15.2
    restart: unless-stopped
    ports:
      - "16211:16211/tcp"
      - "16210:16210/tcp" # gRPC
      - "17210:17210/tcp" # wRPC (borsh)
      - "18210:18210/tcp" # wRPC (json)
    volumes:
      - /root/kaspad_testnet10:/app/data/
    networks:
      - backend
    command: kaspad --yes --nologfiles --disable-upnp --utxoindex --testnet --rpclisten=0.0.0.0:16210 --rpclisten-borsh=0.0.0.0:17210 --rpclisten-json=0.0.0.0:18210

  # kaspad-testnet11: # 10BPS TESTNET
  #   container_name: kaspad-testnet11
  #   image: supertypo/rusty-kaspad:tn11
  #   restart: unless-stopped
  #   ports:
  #     - "16311:16311/tcp"
  #     - "16310:16310/tcp" # gRPC
  #     - "17310:17310/tcp" # wRPC (borsh)
  #     - "18310:18310/tcp" # wRPC (json)
  #   volumes:
  #     - /root/kaspad_testnet11:/app/data/
  #   networks:
  #     - backend
  #   command: kaspad --yes --nologfiles --disable-upnp --utxoindex --testnet --netsuffix=11 --rpclisten=0.0.0.0:16310 --rpclisten-borsh=0.0.0.0:17310 --rpclisten-json=0.0.0.0:18310

  go-app:
    image: ghcr.io/knackroot-technolabs-llp/katpool-blocktemplate-fetcher:latest  # Build the Go app from the ./app directory
    pull_policy: always
    container_name: go-app
    env_file:
      - .env
    depends_on:
      - redis
      - kaspad-testnet10
    volumes:
      - ./config:/app/config
    networks:
      - backend
    restart: always

  katpool-app:
    image: ghcr.io/knackroot-technolabs-llp/katpool-app:latest
    pull_policy: always
    container_name: katpool-app
    depends_on:
      - postgres
      - redis
      - katpool-monitor
      - pushgateway
    ports:
      - "7777:7777"
    networks:
      - backend
    volumes:
      - ./config:/app/config
      - ./wasm:/app/wasm
    env_file:
      - .env
    restart: always

  katpool-monitor:
    image: ghcr.io/knackroot-technolabs-llp/katpool-monitor:latest
    pull_policy: always
    container_name: katpool-monitor
    depends_on:
      - postgres
    networks:
      - backend
    env_file:
      - .env
    ports:
      - "9301:9301"
      - "9300:9300"
    restart: always

  katpool-payment:
    image: ghcr.io/knackroot-technolabs-llp/katpool-payment:latest
    pull_policy: always
    container_name: katpool-payment
    depends_on:
      - postgres
    volumes:
      - ./config:/app/config
      - ./wasm:/app/wasm
    networks:
      - backend
    env_file:
      - .env
    restart: always

  prometheus:
    image: prom/prometheus
    container_name: katpool-prmths
    depends_on:
      - postgres
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - backend
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    restart: always

  pushgateway:
    image: prom/pushgateway
    container_name: katpool-pushgateway
    networks:
      - backend
    restart: always

  nginx:
    container_name: katpool-nginx
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    #      - ./htpasswd:/etc/nginx/.htpasswd
    ports:
      - "8080:8080"
    networks:
      - backend
    depends_on:
      - prometheus
      - katpool-monitor
    restart: always

  # postgres-backup:
  #   image: katpool-backup:0.4
  #   container_name: katpool-backup
  #   depends_on:
  #     - postgres
  #   env_file:
  #     - .env
  #   volumes:
  #     - ./backup/files:/backup/files
  #   networks:
  #     - backend
  #   restart: always

networks:
  backend:
    driver: bridge
    name: katpool-app_backend

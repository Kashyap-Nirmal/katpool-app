# version 0.3
services:
  postgres:
    image: postgres
    container_name: kaspool-db
    networks:
      - backend    
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - .env
    restart: always

  kaspool-app:
    image: kaspool-app:0.61vardiff
    container_name: kaspool-app
    depends_on:
      - postgres
      - kaspool-monitor
      - pushgateway
    ports:
      - "7777:7777"
    networks:
      - backend
    volumes:
      - ./config:/app/config          
    env_file:
      - .env
    restart: always

  kaspool-monitor:
    image: kaspool-monitor:0.2
    container_name: kaspool-monitor
    depends_on:
      - postgres
    networks:
      - backend       
    env_file:
      - .env
    restart: always

  prometheus:
    image: prom/prometheus
    container_name: kaspool-prmths
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - backend       
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    restart: always

  pushgateway:
    image: prom/pushgateway
    container_name: kaspool-pushgateway   
    networks:
      - backend
    restart: always

  nginx:
    container_name: kaspool-nginx
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
#      - ./htpasswd:/etc/nginx/.htpasswd
    ports:
      - "8080:8080"     
    networks:
      - backend      
    depends_on:
      - prometheus
      - kaspool-monitor    

  postgres-backup:
    image: kaspool-backup:0.1
    container_name: kaspool-backup
    depends_on:
      - postgres
    env_file:
      - .env
    volumes:
      - ./backup/files:/backup/files
    networks:
      - backend
    restart: always

networks:
  backend:
    driver: bridge
